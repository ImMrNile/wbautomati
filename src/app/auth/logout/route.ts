import { NextResponse } from 'next/server';
import { cookies } from 'next/headers';
import { prisma } from '../../../../lib/prisma';

export async function POST(request: Request) {
  try {
    console.log('üîê [API Logout] –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã—Ö–æ–¥–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º cookie —Å —Å–µ—Å—Å–∏–µ–π
    const cookieStore = cookies();
    const sessionToken = cookieStore.get('session_token')?.value;
    
    if (sessionToken) {
      console.log('üîê [API Logout] –ù–∞–π–¥–µ–Ω–∞ —Å–µ—Å—Å–∏—è, —É–¥–∞–ª—è–µ–º...');
      
      // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      await prisma.session.deleteMany({
        where: { token: sessionToken }
      });
      
      console.log('‚úÖ [API Logout] –°–µ—Å—Å–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ë–î');
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç —Å —É–¥–∞–ª–µ–Ω–∏–µ–º cookie
    const response = NextResponse.redirect(new URL('/auth/login', request.url));
    
    // –£–¥–∞–ª—è–µ–º cookie —Å–µ—Å—Å–∏–∏
    response.cookies.set('session_token', '', {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 0, // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
      path: '/'
    });
    
    console.log('‚úÖ [API Logout] –í—ã—Ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω, cookie —É–¥–∞–ª–µ–Ω');
    return response;
    
  } catch (error) {
    console.error('‚ùå [API Logout] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
    
    // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    const response = NextResponse.redirect(new URL('/auth/login', request.url));
    
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å cookie
    response.cookies.set('session_token', '', {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 0,
      path: '/'
    });
    
    return response;
  }
}