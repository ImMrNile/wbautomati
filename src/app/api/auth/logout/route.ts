// src/app/api/auth/logout/route.ts

import { NextRequest, NextResponse } from 'next/server';
import { cookies } from 'next/headers';
import { AuthService } from '../../../../../lib/auth/auth-service';

export async function POST(request: NextRequest) {
  try {
    console.log('üö™ [Logout API] –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    
    const cookieStore = cookies();
    const sessionToken = cookieStore.get('session_token')?.value;
    
    if (sessionToken) {
      console.log('üö™ [Logout API] –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é –∏–∑ –ë–î');
      await AuthService.destroySession(sessionToken);
    }
    
    const response = NextResponse.json({
      success: true,
      message: '–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã'
    });
    
    // –£–¥–∞–ª—è–µ–º cookie
    response.cookies.set('session_token', '', {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      maxAge: 0,
      path: '/'
    });
    
    console.log('‚úÖ [Logout API] Logout –∑–∞–≤–µ—Ä—à–µ–Ω');
    return response;
    
  } catch (error) {
    console.error('‚ùå [Logout API] –û—à–∏–±–∫–∞ logout:', error);
    
    return NextResponse.json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã'
    }, { status: 500 });
  }
}