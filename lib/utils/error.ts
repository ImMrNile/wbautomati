// lib/utils/error.ts - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ WB API

/**
 * –ö–æ–¥—ã –æ—à–∏–±–æ–∫ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
 */
export enum ErrorCode {
  // –û–±—â–∏–µ –æ—à–∏–±–∫–∏
  UNKNOWN = 'UNKNOWN',
  INVALID_INPUT = 'INVALID_INPUT',
  NETWORK = 'NETWORK',
  TIMEOUT = 'TIMEOUT',
  
  // –û—à–∏–±–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  PRODUCT_NOT_FOUND = 'PRODUCT_NOT_FOUND',
  PRODUCT_INVALID_DATA = 'PRODUCT_INVALID_DATA',
  
  // –û—à–∏–±–∫–∏ WB API
  WB_API_ERROR = 'WB_API_ERROR',
  WB_INVALID_TOKEN = 'WB_INVALID_TOKEN',
  WB_RATE_LIMIT = 'WB_RATE_LIMIT',
  WB_INVALID_CARD_DATA = 'WB_INVALID_CARD_DATA',
  WB_CATEGORY_NOT_FOUND = 'WB_CATEGORY_NOT_FOUND',
  
  // –û—à–∏–±–∫–∏ –ò–ò
  AI_ANALYSIS_FAILED = 'AI_ANALYSIS_FAILED',
  AI_SERVICE_UNAVAILABLE = 'AI_SERVICE_UNAVAILABLE',
  
  // –û—à–∏–±–∫–∏ —Ñ–∞–π–ª–æ–≤
  FILE_UPLOAD_FAILED = 'FILE_UPLOAD_FAILED',
  FILE_TOO_LARGE = 'FILE_TOO_LARGE',
  FILE_INVALID_TYPE = 'FILE_INVALID_TYPE',
  
  // –û—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  DATABASE_ERROR = 'DATABASE_ERROR',
  CABINET_NOT_FOUND = 'CABINET_NOT_FOUND',
  CABINET_INACTIVE = 'CABINET_INACTIVE'
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏
 */
export interface AppError {
  code: ErrorCode;
  message: string;
  details?: string;
  statusCode: number;
  timestamp: Date;
  context?: Record<string, any>;
}

/**
 * –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 */
export class ErrorHandler {
  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏
   */
  static createError(
    code: ErrorCode,
    message: string,
    details?: string,
    statusCode: number = 500,
    context?: Record<string, any>
  ): AppError {
    return {
      code,
      message,
      details,
      statusCode,
      timestamp: new Date(),
      context
    };
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WB API
   */
  static handleWBApiError(error: any, context?: Record<string, any>): AppError {
    console.error('üî¥ WB API Error:', error);

    // –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é
    const errorMessage = error.message || error.toString();
    const errorLower = errorMessage.toLowerCase();

    // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (errorLower.includes('authorization') || errorLower.includes('unauthorized') || 
        errorLower.includes('403') || errorLower.includes('invalid token')) {
      return this.createError(
        ErrorCode.WB_INVALID_TOKEN,
        '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω Wildberries',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API —Ç–æ–∫–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–±–∏–Ω–µ—Ç–∞',
        401,
        context
      );
    }

    // –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    if (errorLower.includes('format is incorrect') || 
        errorLower.includes('number of product items created should not be 0')) {
      return this.createError(
        ErrorCode.WB_INVALID_CARD_DATA,
        '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞',
        400,
        { originalError: errorMessage, ...context }
      );
    }

    // –û—à–∏–±–∫–∏ –ª–∏–º–∏—Ç–æ–≤
    if (errorLower.includes('rate limit') || errorLower.includes('too many requests') ||
        errorLower.includes('429')) {
      return this.createError(
        ErrorCode.WB_RATE_LIMIT,
        '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API Wildberries',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç',
        429,
        context
      );
    }

    // –û—à–∏–±–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞
    if (errorLower.includes('timeout') || errorLower.includes('timed out')) {
      return this.createError(
        ErrorCode.TIMEOUT,
        '–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ API Wildberries',
        '–°–µ—Ä–≤–µ—Ä Wildberries –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
        408,
        context
      );
    }

    // –û—à–∏–±–∫–∏ —Å–µ—Ç–∏
    if (errorLower.includes('network') || errorLower.includes('connection') ||
        errorLower.includes('fetch failed')) {
      return this.createError(
        ErrorCode.NETWORK,
        '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API Wildberries',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
        503,
        context
      );
    }

    // –û—à–∏–±–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (errorLower.includes('category') || errorLower.includes('imt_id')) {
      return this.createError(
        ErrorCode.WB_CATEGORY_NOT_FOUND,
        '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞',
        '–£–∫–∞–∑–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
        400,
        context
      );
    }

    // –û–±—â–∞—è –æ—à–∏–±–∫–∞ WB API
    return this.createError(
      ErrorCode.WB_API_ERROR,
      '–û—à–∏–±–∫–∞ API Wildberries',
      errorMessage,
      500,
      context
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ò–ò –∞–Ω–∞–ª–∏–∑–∞
   */
  static handleAIError(error: any, context?: Record<string, any>): AppError {
    console.error('ü§ñ AI Error:', error);

    const errorMessage = error.message || error.toString();
    const errorLower = errorMessage.toLowerCase();

    // –û—à–∏–±–∫–∏ API –∫–ª—é—á–∞
    if (errorLower.includes('api key') || errorLower.includes('unauthorized') ||
        errorLower.includes('authentication')) {
      return this.createError(
        ErrorCode.AI_SERVICE_UNAVAILABLE,
        '–°–µ—Ä–≤–∏—Å –ò–ò –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        '–ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –ò–ò —Å–µ—Ä–≤–∏—Å–∞',
        503,
        context
      );
    }

    // –û—à–∏–±–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if (errorLower.includes('image') || errorLower.includes('vision')) {
      return this.createError(
        ErrorCode.AI_ANALYSIS_FAILED,
        '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
        400,
        context
      );
    }

    // –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ò–ò
    return this.createError(
      ErrorCode.AI_ANALYSIS_FAILED,
      '–û—à–∏–±–∫–∞ –ò–ò –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–∞',
      errorMessage,
      500,
      context
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
   */
  static handleFileError(error: any, context?: Record<string, any>): AppError {
    console.error('üìÅ File Error:', error);

    const errorMessage = error.message || error.toString();
    const errorLower = errorMessage.toLowerCase();

    // –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    if (errorLower.includes('too large') || errorLower.includes('file size')) {
      return this.createError(
        ErrorCode.FILE_TOO_LARGE,
        '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π',
        '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 10 –ú–ë',
        413,
        context
      );
    }

    // –¢–∏–ø —Ñ–∞–π–ª–∞
    if (errorLower.includes('type') || errorLower.includes('format')) {
      return this.createError(
        ErrorCode.FILE_INVALID_TYPE,
        '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞',
        '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: JPG, PNG, WebP, GIF',
        415,
        context
      );
    }

    // –û–±—â–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    return this.createError(
      ErrorCode.FILE_UPLOAD_FAILED,
      '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞',
      errorMessage,
      500,
      context
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
   */
  static handleDatabaseError(error: any, context?: Record<string, any>): AppError {
    console.error('üóÑÔ∏è Database Error:', error);

    const errorMessage = error.message || error.toString();

    return this.createError(
      ErrorCode.DATABASE_ERROR,
      '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
      '–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö',
      500,
      { originalError: errorMessage, ...context }
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
   */
  static handleValidationError(
    fieldName: string, 
    value: any, 
    expectedFormat: string,
    context?: Record<string, any>
  ): AppError {
    return this.createError(
      ErrorCode.INVALID_INPUT,
      `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è: ${fieldName}`,
      `–û–∂–∏–¥–∞–µ—Ç—Å—è: ${expectedFormat}, –ø–æ–ª—É—á–µ–Ω–æ: ${value}`,
      400,
      { fieldName, value, expectedFormat, ...context }
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
   */
  static handleUnknownError(error: any, context?: Record<string, any>): AppError {
    console.error('‚ùì Unknown Error:', error);

    return this.createError(
      ErrorCode.UNKNOWN,
      '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      error.message || error.toString(),
      500,
      context
    );
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏ –∏ –µ—ë –æ–±—Ä–∞–±–æ—Ç–∫–∞
   */
  static handleError(error: any, context?: Record<string, any>): AppError {
    if (!error) {
      return this.handleUnknownError(new Error('–ü—É—Å—Ç–∞—è –æ—à–∏–±–∫–∞'), context);
    }

    const errorMessage = error.message || error.toString();
    const errorLower = errorMessage.toLowerCase();

    // WB API –æ—à–∏–±–∫–∏
    if (errorLower.includes('wildberries') || errorLower.includes('wb api') ||
        errorLower.includes('content-api') || errorLower.includes('authorization')) {
      return this.handleWBApiError(error, context);
    }

    // –ò–ò –æ—à–∏–±–∫–∏
    if (errorLower.includes('openai') || errorLower.includes('gemini') ||
        errorLower.includes('ai analysis') || errorLower.includes('vision')) {
      return this.handleAIError(error, context);
    }

    // –§–∞–π–ª–æ–≤—ã–µ –æ—à–∏–±–∫–∏
    if (errorLower.includes('file') || errorLower.includes('upload') ||
        errorLower.includes('image')) {
      return this.handleFileError(error, context);
    }

    // –û—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if (errorLower.includes('prisma') || errorLower.includes('database') ||
        errorLower.includes('sql')) {
      return this.handleDatabaseError(error, context);
    }

    // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    if (errorLower.includes('validation') || errorLower.includes('invalid')) {
      return this.createError(
        ErrorCode.INVALID_INPUT,
        '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
        errorMessage,
        400,
        context
      );
    }

    // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
    if (errorLower.includes('network') || errorLower.includes('fetch') ||
        errorLower.includes('timeout')) {
      return this.createError(
        ErrorCode.NETWORK,
        '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏',
        errorMessage,
        503,
        context
      );
    }

    return this.handleUnknownError(error, context);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—à–∏–±–∫–∏
   */
  static getUserMessage(error: AppError): string {
    const userMessages: Partial<Record<ErrorCode, string>> = {
      [ErrorCode.UNKNOWN]: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      [ErrorCode.INVALID_INPUT]: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.',
      [ErrorCode.NETWORK]: '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.',
      [ErrorCode.TIMEOUT]: '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      
      [ErrorCode.PRODUCT_NOT_FOUND]: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.',
      [ErrorCode.PRODUCT_INVALID_DATA]: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞.',
      
      [ErrorCode.WB_API_ERROR]: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Wildberries.',
      [ErrorCode.WB_INVALID_TOKEN]: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ API —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–±–∏–Ω–µ—Ç–∞.',
      [ErrorCode.WB_RATE_LIMIT]: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.',
      [ErrorCode.WB_INVALID_CARD_DATA]: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏.',
      [ErrorCode.WB_CATEGORY_NOT_FOUND]: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞.',
      
      [ErrorCode.AI_ANALYSIS_FAILED]: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä —Å –ø–æ–º–æ—â—å—é –ò–ò.',
      [ErrorCode.AI_SERVICE_UNAVAILABLE]: '–°–µ—Ä–≤–∏—Å –ò–ò –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.',
      
      [ErrorCode.FILE_UPLOAD_FAILED]: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª.',
      [ErrorCode.FILE_TOO_LARGE]: '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 10 –ú–ë.',
      [ErrorCode.FILE_INVALID_TYPE]: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.',
      
      [ErrorCode.DATABASE_ERROR]: '–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö.',
      [ErrorCode.CABINET_NOT_FOUND]: '–ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.',
      [ErrorCode.CABINET_INACTIVE]: '–ö–∞–±–∏–Ω–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.'
    };

    return userMessages[error.code] || error.message;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ—à–∏–±–∫–∏
   */
  static getRecommendations(error: AppError): string[] {
    const recommendations: Partial<Record<ErrorCode, string[]>> = {
      [ErrorCode.WB_INVALID_TOKEN]: [
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API —Ç–æ–∫–µ–Ω–∞',
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ –∏—Å—Ç–µ–∫',
        '–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ WB'
      ],
      [ErrorCode.WB_INVALID_CARD_DATA]: [
        '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞',
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
      ],
      [ErrorCode.AI_ANALYSIS_FAILED]: [
        '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–≤–∞—Ä —Ö–æ—Ä–æ—à–æ –≤–∏–¥–µ–Ω –Ω–∞ —Ñ–æ—Ç–æ',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
      ],
      [ErrorCode.FILE_TOO_LARGE]: [
        '–°–æ–∂–º–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '–£–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Ñ–æ—Ç–æ',
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç JPEG –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞'
      ],
      [ErrorCode.NETWORK]: [
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
        '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è'
      ],
      [ErrorCode.TIMEOUT]: [
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
        '–£–≤–µ–ª–∏—á—å—Ç–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è'
      ],
      [ErrorCode.INVALID_INPUT]: [
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
      ]
    };

    return recommendations[error.code] || ['–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–∑–∂–µ'];
  }

  /**
   * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
   */
  static logError(error: AppError, additionalContext?: Record<string, any>): void {
    const logLevel = error.statusCode >= 500 ? 'error' : 'warn';
    const logData = {
      timestamp: error.timestamp,
      code: error.code,
      message: error.message,
      details: error.details,
      statusCode: error.statusCode,
      context: { ...error.context, ...additionalContext }
    };

    if (logLevel === 'error') {
      console.error('üî¥ APPLICATION ERROR:', JSON.stringify(logData, null, 2));
    } else {
      console.warn('üü° APPLICATION WARNING:', JSON.stringify(logData, null, 2));
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ API —Å –æ—à–∏–±–∫–æ–π
   */
  static createApiResponse(error: AppError) {
    return {
      success: false,
      error: {
        code: error.code,
        message: this.getUserMessage(error),
        details: error.details,
        recommendations: this.getRecommendations(error),
        timestamp: error.timestamp
      }
    };
  }
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—à–∏–±–∫–∞–º–∏
 */
export const ErrorUtils = {
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π
   */
  isCritical: (error: AppError): boolean => {
    const criticalCodes = [
      ErrorCode.DATABASE_ERROR,
      ErrorCode.UNKNOWN
    ];
    return criticalCodes.includes(error.code) || error.statusCode >= 500;
  },

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é
   */
  isRetryable: (error: AppError): boolean => {
    const retryableCodes = [
      ErrorCode.NETWORK,
      ErrorCode.TIMEOUT,
      ErrorCode.WB_RATE_LIMIT
    ];
    return retryableCodes.includes(error.code);
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞
   */
  getRetryDelay: (error: AppError, attempt: number): number => {
    const baseDelays: Partial<Record<ErrorCode, number>> = {
      [ErrorCode.NETWORK]: 1000,
      [ErrorCode.TIMEOUT]: 2000,
      [ErrorCode.WB_RATE_LIMIT]: 5000
    };

    const baseDelay = baseDelays[error.code] || 1000;
    return baseDelay * Math.pow(2, attempt); // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
  }
};

export default ErrorHandler;