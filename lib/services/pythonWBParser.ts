// lib/services/enhancedPythonWBParser.ts - –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º Python –ø–∞—Ä—Å–µ—Ä–æ–º

import { spawn } from 'child_process';
import path from 'path';
import fs from 'fs';

interface WBProductData {
  id: string;
  name: string;
  brand: string;
  price: number;
  rating: number;
  reviewsCount: number;
  description: string;
  characteristics: Array<{ name: string; value: string }>;
  images: string[];
  category: string;
  categoryId?: number;
  availability: boolean;
  vendorCode: string;
  supplierId?: string;
  tnved?: string;
  variantId?: string; // ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ (size parameter)
}

interface ParseResult {
  success: boolean;
  data?: WBProductData;
  error?: string;
  parsing_method?: 'HTML' | 'API';
  characteristics_count?: number;
  variant_id?: string;
  stats?: {
    total_requests: number;
    success_rate: number;
    html_parsing_available: boolean;
  };
}

interface ParserHealth {
  status: 'healthy' | 'degraded' | 'unhealthy';
  details: {
    pythonAvailable: boolean;
    venvExists: boolean;
    scriptExists: boolean;
    requestsInstalled: boolean;
    beautifulSoupInstalled: boolean;
    htmlParsingAvailable: boolean;
    testPassed: boolean;
  };
  capabilities: {
    htmlParsing: boolean;
    apiParsing: boolean;
    variantSupport: boolean;
    characteristicExtraction: boolean;
  };
}

export class PythonWBParser {
  private readonly pythonScriptPath: string;
  private readonly venvPath: string;
  private readonly timeout: number = 120000; // 2 –º–∏–Ω—É—Ç—ã –¥–ª—è HTML –ø–∞—Ä—Å–∏–Ω–≥–∞
  private isInitialized: boolean = false;
  private lastError: string | null = null;
  private htmlParsingAvailable: boolean = false;

  constructor() {
    this.pythonScriptPath = path.join(process.cwd(), 'scripts', 'wb_parser.py');
    this.venvPath = path.join(process.cwd(), 'venv');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Python –ø–∞—Ä—Å–µ—Ä–∞
   */
  async initialize(): Promise<boolean> {
    try {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Python –ø–∞—Ä—Å–µ—Ä–∞...');

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
      const pythonAvailable = await this.checkPythonAvailability();
      if (!pythonAvailable) {
        this.lastError = 'Python –Ω–µ –Ω–∞–π–¥–µ–Ω';
        console.error('‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7+');
        return false;
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
      if (!fs.existsSync(this.pythonScriptPath)) {
        this.lastError = `Python —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${this.pythonScriptPath}`;
        console.error(`‚ùå Python —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${this.pythonScriptPath}`);
        return false;
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      const depsCheck = await this.checkDependencies();
      this.htmlParsingAvailable = depsCheck.requests && depsCheck.beautifulSoup;

      if (depsCheck.requests) {
        console.log('‚úÖ –ú–æ–¥—É–ª—å requests –¥–æ—Å—Ç—É–ø–µ–Ω');
      } else {
        console.warn('‚ö†Ô∏è –ú–æ–¥—É–ª—å requests –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      if (depsCheck.beautifulSoup) {
        console.log('‚úÖ –ú–æ–¥—É–ª—å BeautifulSoup –¥–æ—Å—Ç—É–ø–µ–Ω - HTML –ø–∞—Ä—Å–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω');
      } else {
        console.warn('‚ö†Ô∏è –ú–æ–¥—É–ª—å BeautifulSoup –Ω–µ –Ω–∞–π–¥–µ–Ω - —Ç–æ–ª—å–∫–æ API –ø–∞—Ä—Å–∏–Ω–≥');
      }

      // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
      const testPassed = await this.runTest();
      if (!testPassed) {
        this.lastError = '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –Ω–µ –ø—Ä–æ—à–µ–ª';
        console.warn('‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –Ω–µ –ø—Ä–æ—à–µ–ª, –Ω–æ –ø–∞—Ä—Å–µ—Ä –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å');
        // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º —Ç–µ—Å—Ç–µ
      }

      this.isInitialized = true;
      this.lastError = null;
      
      console.log('‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π Python –ø–∞—Ä—Å–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      console.log(`üåê HTML –ø–∞—Ä—Å–∏–Ω–≥: ${this.htmlParsingAvailable ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
      
      return true;

    } catch (error: any) {
      this.lastError = error.message;
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Python –ø–∞—Ä—Å–µ—Ä–∞:', error);
      return false;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Python
   */
  async checkPythonAvailability(): Promise<boolean> {
    return new Promise((resolve) => {
      try {
        const venvPythonPath = this.getVenvPythonPath();
        
        if (venvPythonPath && fs.existsSync(venvPythonPath)) {
          console.log('üêç –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏');
          const pythonProcess = spawn(venvPythonPath, ['--version'], {
            stdio: ['pipe', 'pipe', 'pipe'],
            timeout: 5000
          });

          pythonProcess.on('close', (code) => {
            resolve(code === 0);
          });

          pythonProcess.on('error', () => {
            console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ venv Python, –ø—Ä–æ–±—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π');
            this.checkSystemPython(resolve);
          });
        } else {
          console.log('üì¶ venv –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Python');
          this.checkSystemPython(resolve);
        }
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Python:', error);
        resolve(false);
      }
    });
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ Python
   */
  private checkSystemPython(resolve: (value: boolean) => void): void {
    const pythonCommands = ['python', 'python3'];
    let currentIndex = 0;

    const tryNext = () => {
      if (currentIndex >= pythonCommands.length) {
        resolve(false);
        return;
      }

      const pythonCommand = pythonCommands[currentIndex];
      const pythonProcess = spawn(pythonCommand, ['--version'], {
        stdio: ['pipe', 'pipe', 'pipe'],
        timeout: 5000
      });

      pythonProcess.on('close', (code) => {
        if (code === 0) {
          resolve(true);
        } else {
          currentIndex++;
          tryNext();
        }
      });

      pythonProcess.on('error', () => {
        currentIndex++;
        tryNext();
      });
    };

    tryNext();
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
   */
  private getVenvPythonPath(): string | null {
    const isWindows = process.platform === 'win32';
    
    if (isWindows) {
      const windowsPath = path.join(this.venvPath, 'Scripts', 'python.exe');
      return fs.existsSync(windowsPath) ? windowsPath : null;
    } else {
      const unixPath = path.join(this.venvPath, 'bin', 'python');
      return fs.existsSync(unixPath) ? unixPath : null;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã Python
   */
  private getPythonCommand(): string {
    const venvPython = this.getVenvPythonPath();
    if (venvPython) {
      console.log('üêç –ò—Å–ø–æ–ª—å–∑—É–µ–º Python –∏–∑ venv');
      return venvPython;
    }
    
    console.log('üêç –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π Python');
    return process.platform === 'win32' ? 'python' : 'python3';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
   */
  private async checkDependencies(): Promise<{
    requests: boolean;
    beautifulSoup: boolean;
  }> {
    const pythonCommand = this.getPythonCommand();
    
    const checkModule = (moduleName: string): Promise<boolean> => {
      return new Promise((resolve) => {
        const pythonProcess = spawn(pythonCommand, ['-c', `import ${moduleName}; print("OK")`], {
          stdio: ['pipe', 'pipe', 'pipe'],
          timeout: 10000,
          cwd: process.cwd()
        });

        pythonProcess.on('close', (code) => {
          resolve(code === 0);
        });

        pythonProcess.on('error', () => {
          resolve(false);
        });
      });
    };

    const [requests, beautifulSoup] = await Promise.all([
      checkModule('requests'),
      checkModule('bs4')
    ]);

    return { requests, beautifulSoup };
  }

  /**
   * –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
   */
  private async runTest(): Promise<boolean> {
    try {
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π Python –ø–∞—Ä—Å–µ—Ä...');
      
      const result = await this.executePythonScript(['--test']);
      return result.success || (result.stats?.total_requests || 0) > 0;
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –Ω–µ –ø—Ä–æ—à–µ–ª:', error);
      return false;
    }
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
   */
  async getProductData(url: string, options?: {
    forceHtmlParsing?: boolean;
    timeout?: number;
  }): Promise<WBProductData> {
    if (!this.isInitialized) {
      throw new Error('–£–ª—É—á—à–µ–Ω–Ω—ã–π Python –ø–∞—Ä—Å–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    console.log(`üîç –ó–∞–ø—É—Å–∫–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π Python –ø–∞—Ä—Å–µ—Ä –¥–ª—è: ${url}`);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Ä–∏–∞–Ω—Ç–µ –∏–∑ URL
    const variantInfo = this.extractVariantInfo(url);
    if (variantInfo.hasVariant) {
      console.log(`üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–∞—Ä–∏–∞–Ω—Ç —Ç–æ–≤–∞—Ä–∞: ${variantInfo.variantId}`);
    }
    
    try {
      const result = await this.executePythonScript([url], {
        timeout: options?.timeout || this.timeout
      });

      if (result.success && result.data) {
        console.log(`‚úÖ Python –ø–∞—Ä—Å–µ—Ä –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ: ${result.data.name}`);
        console.log(`üìã –ù–∞–π–¥–µ–Ω–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: ${result.characteristics_count || 0}`);
        console.log(`üîß –ú–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${result.parsing_method || 'unknown'}`);
        
        if (result.variant_id) {
          console.log(`üéØ –û–±—Ä–∞–±–æ—Ç–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç: ${result.variant_id}`);
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
        const charCount = result.data.characteristics?.length || 0;
        if (charCount > 5) {
          console.log(`üåü –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${charCount} —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫`);
        } else if (charCount > 0) {
          console.log(`‚ö†Ô∏è –ë–∞–∑–æ–≤–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${charCount} —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫`);
        } else {
          console.warn(`‚ùå –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã`);
        }

        return result.data;
      } else {
        throw new Error(result.error || 'Python –ø–∞—Ä—Å–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ');
      }

    } catch (error: any) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Python –ø–∞—Ä—Å–µ—Ä–∞: ${error.message}`);
      throw new Error(`–£–ª—É—á—à–µ–Ω–Ω—ã–π Python –ø–∞—Ä—Å–µ—Ä: ${error.message}`);
    }
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—Ä–∏–∞–Ω—Ç–µ –∏–∑ URL
   */
  private extractVariantInfo(url: string): {
    hasVariant: boolean;
    variantId?: string;
    productId?: string;
  } {
    try {
      const urlObj = new URL(url);
      const sizeParam = urlObj.searchParams.get('size');
      
      // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID —Ç–æ–≤–∞—Ä–∞
      const productIdMatch = url.match(/\/catalog\/(\d+)\//);
      const productId = productIdMatch ? productIdMatch[1] : undefined;

      return {
        hasVariant: !!sizeParam,
        variantId: sizeParam || undefined,
        productId
      };
    } catch (error) {
      return { hasVariant: false };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
   */
  async checkProductExists(nmId: string): Promise<boolean> {
    if (!this.isInitialized) {
      return false;
    }

    try {
      const testUrl = `https://www.wildberries.ru/catalog/${nmId}/detail.aspx`;
      const result = await this.executePythonScript([testUrl], { timeout: 30000 });
      
      return result.success && !!result.data;
    } catch {
      return false;
    }
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
   */
  async getProductVariant(productId: string, variantId: string): Promise<WBProductData> {
    const url = `https://www.wildberries.ru/catalog/${productId}/detail.aspx?size=${variantId}`;
    return this.getProductData(url);
  }

  /**
   * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Python —Å–∫—Ä–∏–ø—Ç–∞
   */
  private async executePythonScript(
    args: string[], 
    options?: { timeout?: number }
  ): Promise<ParseResult> {
    return new Promise((resolve, reject) => {
      const pythonCommand = this.getPythonCommand();
      const timeout = options?.timeout || this.timeout;
      
      console.log(`üêç –í—ã–ø–æ–ª–Ω—è–µ–º: ${pythonCommand} ${this.pythonScriptPath} ${args.join(' ')}`);
      
      const pythonProcess = spawn(pythonCommand, [this.pythonScriptPath, ...args], {
        stdio: ['pipe', 'pipe', 'pipe'],
        timeout: timeout,
        cwd: process.cwd(),
        env: {
          ...process.env,
          PYTHONIOENCODING: 'utf-8',
          PYTHONUNBUFFERED: '1'
        }
      });

      let stdout = '';
      let stderr = '';
      let isTimedOut = false;

      // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ stdout
      pythonProcess.stdout.on('data', (data) => {
        stdout += data.toString('utf8');
      });

      // –°–±–æ—Ä –æ—à–∏–±–æ–∫ –∏–∑ stderr (–ª–æ–≥–∏ Python –ø–∞—Ä—Å–µ—Ä–∞)
      pythonProcess.stderr.on('data', (data) => {
        const stderrText = data.toString('utf8');
        stderr += stderrText;
        
        // –í—ã–≤–æ–¥–∏–º –≤–∞–∂–Ω—ã–µ –ª–æ–≥–∏ Python –≤ –∫–æ–Ω—Å–æ–ª—å Node.js
        const lines = stderrText.trim().split('\n');
       lines.forEach((line: string) => {
  if (line.includes('‚úÖ') || line.includes('‚ùå') || line.includes('üìã') || 
      line.includes('üåê') || line.includes('‚ö†Ô∏è')) {
    console.log('üêç', line.trim());
  }
});
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
      pythonProcess.on('close', (code) => {
        if (isTimedOut) {
          reject(new Error(`Python –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É (${timeout}ms)`));
          return;
        }

        if (code === 0) {
          try {
            const cleanStdout = stdout.trim();
            
            if (!cleanStdout) {
              reject(new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç Python –ø–∞—Ä—Å–µ—Ä–∞'));
              return;
            }
            
            const result: ParseResult = JSON.parse(cleanStdout);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if (result.success && result.data) {
              this.validateProductData(result.data);
            }
            
            resolve(result);
          } catch (parseError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞:', parseError);
            console.error('Stdout (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):', stdout.substring(0, 500));
            
            // –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å JSON –∏–∑ –≤—ã–≤–æ–¥–∞ (–∏–Ω–æ–≥–¥–∞ –µ—Å—Ç—å –ª–∏—à–Ω–∏–π —Ç–µ–∫—Å—Ç)
            const jsonMatch = stdout.match(/\{.*\}/);
            if (jsonMatch) {
              try {
                const result: ParseResult = JSON.parse(jsonMatch[0]);
                resolve(result);
                return;
              } catch {}
            }
            
            reject(new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç–≤–µ—Ç –æ—Ç Python –ø–∞—Ä—Å–µ—Ä–∞'));
          }
        } else {
          console.error(`‚ùå Python –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: ${code}`);
          if (stderr) {
            console.error('Stderr (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):', stderr.substring(0, 500));
          }
          reject(new Error(`Python –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`));
        }
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
      pythonProcess.on('error', (error) => {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Python:`, error.message);
        reject(new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Python: ${error.message}`));
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞
      pythonProcess.on('exit', (code, signal) => {
        if (signal === 'SIGTERM') {
          isTimedOut = true;
          reject(new Error(`Python –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É (${timeout}ms)`));
        }
      });

      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
      const timeoutId = setTimeout(() => {
        isTimedOut = true;
        pythonProcess.kill('SIGTERM');
        
        // –ï—Å–ª–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, —É–±–∏–≤–∞–µ–º —Å–∏–ª–æ–π
        setTimeout(() => {
          if (!pythonProcess.killed) {
            pythonProcess.kill('SIGKILL');
          }
        }, 5000);
      }, timeout);

      pythonProcess.on('close', () => {
        clearTimeout(timeoutId);
      });
    });
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞
   */
  private validateProductData(data: WBProductData): void {
    if (!data.id || !data.name) {
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ');
    }

    if (data.name === `–¢–æ–≤–∞—Ä ${data.id}`) {
      console.warn('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω—ã fallback –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞');
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    if (data.characteristics) {
      data.characteristics = data.characteristics.filter(char => 
        char.name && char.value && 
        char.name.trim().length > 0 && 
        char.value.trim().length > 0
      );
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if (data.images) {
      data.images = data.images.filter(img => 
        img && img.startsWith('http')
      );
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º
   */
  async test(testUrl?: string): Promise<{
    success: boolean;
    details: {
      productFound: boolean;
      characteristicsCount: number;
      parsingMethod?: string;
      variantSupport: boolean;
      htmlParsingWorked: boolean;
    };
    error?: string;
  }> {
    if (!this.isInitialized) {
      return {
        success: false,
        details: {
          productFound: false,
          characteristicsCount: 0,
          variantSupport: false,
          htmlParsingWorked: false
        },
        error: '–ü–∞—Ä—Å–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'
      };
    }

    try {
      // –¢–µ—Å—Ç —Å —Ç–æ–≤–∞—Ä–æ–º, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
      const url = testUrl || 'https://www.wildberries.ru/catalog/221501024/detail.aspx?size=351871410';
      console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä —Å URL: ${url}`);
      
      const result = await this.getProductData(url);
      const characteristicsCount = result.characteristics?.length || 0;
      const htmlParsingWorked = characteristicsCount > 3; // HTML –ø–∞—Ä—Å–∏–Ω–≥ –æ–±—ã—á–Ω–æ –¥–∞–µ—Ç –±–æ–ª—å—à–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
      
      const success = !!(result && result.name && result.name.length > 3);
      
      if (success) {
        console.log('‚úÖ –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ');
        console.log(`üìã –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –Ω–∞–π–¥–µ–Ω–æ: ${characteristicsCount}`);
        console.log(`üåê HTML –ø–∞—Ä—Å–∏–Ω–≥: ${htmlParsingWorked ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è'}`);
      } else {
        console.warn('‚ö†Ô∏è –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –Ω–µ –ø—Ä–æ—à–µ–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é');
      }
      
      return {
        success,
        details: {
          productFound: !!result,
          characteristicsCount,
          parsingMethod: htmlParsingWorked ? 'HTML' : 'API',
          variantSupport: !!result.variantId,
          htmlParsingWorked
        }
      };
    } catch (error: any) {
      console.error('‚ùå –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –Ω–µ –ø—Ä–æ—à–µ–ª:', error);
      return {
        success: false,
        details: {
          productFound: false,
          characteristicsCount: 0,
          variantSupport: false,
          htmlParsingWorked: false
        },
        error: error.message
      };
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞—Ä—Å–µ—Ä–∞
   */
  getStatus(): {
    initialized: boolean;
    available: boolean;
    htmlParsingAvailable: boolean;
    lastError: string | null;
    scriptPath: string;
    venvPath: string;
    venvExists: boolean;
    capabilities: string[];
  } {
    const capabilities = [];
    if (this.isInitialized) {
      capabilities.push('API –ø–∞—Ä—Å–∏–Ω–≥');
      if (this.htmlParsingAvailable) {
        capabilities.push('HTML –ø–∞—Ä—Å–∏–Ω–≥');
        capabilities.push('–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫');
      }
      capabilities.push('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤');
    }

    return {
      initialized: this.isInitialized,
      available: this.isInitialized,
      htmlParsingAvailable: this.htmlParsingAvailable,
      lastError: this.lastError,
      scriptPath: this.pythonScriptPath,
      venvPath: this.venvPath,
      venvExists: fs.existsSync(this.venvPath),
      capabilities
    };
  }

  /**
   * –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø–∞—Ä—Å–µ—Ä–∞
   */
  async healthCheck(): Promise<ParserHealth> {
    const details = {
      pythonAvailable: false,
      venvExists: false,
      scriptExists: false,
      requestsInstalled: false,
      beautifulSoupInstalled: false,
      htmlParsingAvailable: false,
      testPassed: false
    };

    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
      details.pythonAvailable = await this.checkPythonAvailability();
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ venv
      details.venvExists = fs.existsSync(this.venvPath);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
      details.scriptExists = fs.existsSync(this.pythonScriptPath);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      if (details.pythonAvailable) {
        const deps = await this.checkDependencies();
        details.requestsInstalled = deps.requests;
        details.beautifulSoupInstalled = deps.beautifulSoup;
        details.htmlParsingAvailable = deps.requests && deps.beautifulSoup;
        
        // –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞
        if (details.scriptExists && details.requestsInstalled) {
          const testResult = await this.test();
          details.testPassed = testResult.success;
        }
      }

      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
      let status: 'healthy' | 'degraded' | 'unhealthy';
      
      if (details.pythonAvailable && details.scriptExists && 
          details.requestsInstalled && details.testPassed) {
        if (details.beautifulSoupInstalled) {
          status = 'healthy';
        } else {
          status = 'degraded'; // –†–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –±–µ–∑ HTML –ø–∞—Ä—Å–∏–Ω–≥–∞
        }
      } else if (details.pythonAvailable && details.scriptExists) {
        status = 'degraded';
      } else {
        status = 'unhealthy';
      }

      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
      const capabilities = {
        htmlParsing: details.htmlParsingAvailable,
        apiParsing: details.pythonAvailable && details.scriptExists && details.requestsInstalled,
        variantSupport: details.pythonAvailable && details.scriptExists,
        characteristicExtraction: details.htmlParsingAvailable
      };

      return { status, details, capabilities };

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –ø–∞—Ä—Å–µ—Ä–∞:', error);
      return { 
        status: 'unhealthy', 
        details,
        capabilities: {
          htmlParsing: false,
          apiParsing: false,
          variantSupport: false,
          characteristicExtraction: false
        }
      };
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
   */
  async getSetupRecommendations(): Promise<string[]> {
    const recommendations: string[] = [];
    const health = await this.healthCheck();

    if (!health.details.pythonAvailable) {
      recommendations.push('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7+ (https://python.org/downloads/)');
      recommendations.push('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Python –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH');
    }

    if (!health.details.venvExists) {
      recommendations.push('–°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: python -m venv venv');
      recommendations.push('–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ venv: venv\\Scripts\\activate (Windows) –∏–ª–∏ source venv/bin/activate (Linux/Mac)');
    }

    if (!health.details.scriptExists) {
      recommendations.push(`–°–æ–∑–¥–∞–π—Ç–µ Python —Å–∫—Ä–∏–ø—Ç: ${this.pythonScriptPath}`);
      recommendations.push('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥ –ø–∞—Ä—Å–µ—Ä–∞ –≤ —Ñ–∞–π–ª wb_parser.py');
    }

    if (health.details.pythonAvailable && !health.details.requestsInstalled) {
      recommendations.push('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install requests');
    }

    if (health.details.pythonAvailable && !health.details.beautifulSoupInstalled) {
      recommendations.push('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BeautifulSoup –¥–ª—è HTML –ø–∞—Ä—Å–∏–Ω–≥–∞: pip install beautifulsoup4');
      recommendations.push('HTML –ø–∞—Ä—Å–∏–Ω–≥ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫');
    }

    if (health.details.requestsInstalled && !health.details.testPassed) {
      recommendations.push('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
      recommendations.push('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ');
      recommendations.push('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –≤—Ä—É—á–Ω—É—é: python wb_parser.py --test');
    }

    if (health.status === 'healthy') {
      recommendations.push('‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π Python –ø–∞—Ä—Å–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      recommendations.push('üåü –î–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏: HTML –ø–∞—Ä—Å–∏–Ω–≥, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤');
    } else if (health.status === 'degraded') {
      recommendations.push('‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ');
      if (!health.capabilities.htmlParsing) {
        recommendations.push('–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install beautifulsoup4');
      }
    }

    return recommendations;
  }

  /**
   * –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞
   */
  async reinitialize(): Promise<boolean> {
    console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Python –ø–∞—Ä—Å–µ—Ä–∞...');
    
    this.isInitialized = false;
    this.lastError = null;
    this.htmlParsingAvailable = false;
    
    return await this.initialize();
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ)
   */
  async installDependencies(): Promise<{
    success: boolean;
    installed: string[];
    failed: string[];
    message: string;
  }> {
    const installed: string[] = [];
    const failed: string[] = [];
    
    try {
      console.log('üì¶ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
      
      const result = await this.executePythonScript(['--install'], { timeout: 60000 });
      
      if (result.success) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
        const deps = await this.checkDependencies();
        if (deps.requests) installed.push('requests');
        if (deps.beautifulSoup) installed.push('beautifulsoup4');
        
        if (!deps.requests) failed.push('requests');
        if (!deps.beautifulSoup) failed.push('beautifulsoup4');
        
        return {
          success: installed.length > 0,
          installed,
          failed,
          message: installed.length > 0 
            ? `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${installed.join(', ')}`
            : '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å'
        };
      } else {
        return {
          success: false,
          installed: [],
          failed: ['requests', 'beautifulsoup4'],
          message: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: pip install requests beautifulsoup4'
        };
      }
    } catch (error: any) {
      return {
        success: false,
        installed: [],
        failed: ['requests', 'beautifulsoup4'],
        message: `–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: ${error.message}`
      };
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
   */
  async cleanup(): Promise<void> {
    this.isInitialized = false;
    this.lastError = null;
    this.htmlParsingAvailable = false;
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Python –ø–∞—Ä—Å–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
export const pythonWBParser = new PythonWBParser();