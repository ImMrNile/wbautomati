// lib/services/hybridWBParser.ts - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π

import { wbSimpleParser } from '../services/wbSimpleParser';
import { pythonWBParser } from '../services/pythonWBParser';

interface WBProductData {
  id: string;
  name: string;
  brand: string;
  price: number;
  rating: number;
  reviewsCount: number;
  description: string;
  characteristics: Array<{ name: string; value: string }>;
  images: string[];
  category: string;
  categoryId?: number;
  availability: boolean;
  vendorCode: string;
  supplierId?: string;
  tnved?: string;
}

interface ParserStatus {
  typescript: {
    available: boolean;
    lastChecked: Date;
    successRate: number;
    error?: string;
  };
  python: {
    available: boolean;
    lastChecked: Date;
    initialized: boolean;
    error?: string;
  };
}

export class HybridWBParser {
  private status: ParserStatus;
  private initializationPromise: Promise<void> | null = null;

  constructor() {
    this.status = {
      typescript: {
        available: true,
        lastChecked: new Date(),
        successRate: 100
      },
      python: {
        available: false,
        lastChecked: new Date(),
        initialized: false
      }
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ —Ñ–æ–Ω–µ
    this.initializationPromise = this.initializeParsers();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–æ–≤
   */
  private async initializeParsers(): Promise<void> {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞...');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –ø–∞—Ä—Å–µ—Ä–∞
    try {
      await this.testTypeScriptParser();
      this.status.typescript.available = true;
      this.status.typescript.error = undefined;
      console.log('‚úÖ TypeScript –ø–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤');
    } catch (error: any) {
      this.status.typescript.available = false;
      this.status.typescript.error = error.message;
      console.warn('‚ö†Ô∏è TypeScript –ø–∞—Ä—Å–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Python –ø–∞—Ä—Å–µ—Ä–∞
    try {
      const pythonAvailable = await pythonWBParser.checkPythonAvailability();
      if (pythonAvailable) {
        const initialized = await pythonWBParser.initialize();
        this.status.python.initialized = initialized;
        this.status.python.available = initialized;
        
        if (initialized) {
          console.log('‚úÖ Python –ø–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤');
        } else {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Python –ø–∞—Ä—Å–µ—Ä');
        }
      } else {
        throw new Error('Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ');
      }
    } catch (error: any) {
      this.status.python.available = false;
      this.status.python.initialized = false;
      this.status.python.error = error.message;
      console.warn('‚ö†Ô∏è Python –ø–∞—Ä—Å–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    }

    this.status.typescript.lastChecked = new Date();
    this.status.python.lastChecked = new Date();

    console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', {
      typescript: this.status.typescript.available,
      python: this.status.python.available
    });
  }

  /**
   * –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   */
  private async ensureInitialized(): Promise<void> {
    if (this.initializationPromise) {
      await this.initializationPromise;
      this.initializationPromise = null;
    }
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
   */
  async getProductData(url: string): Promise<WBProductData> {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞:', url);

    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    await this.ensureInitialized();

    const nmId = this.extractProductId(url);
    if (!nmId) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL');
    }

    const errors: string[] = [];

    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: TypeScript –ø–∞—Ä—Å–µ—Ä (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π)
    if (this.status.typescript.available) {
      try {
        console.log('üì° –ü–æ–ø—ã—Ç–∫–∞ 1: TypeScript –ø–∞—Ä—Å–µ—Ä...');
        const result = await wbSimpleParser.getProductData(url);
        
        if (this.isValidProductData(result)) {
          this.updateTypeScriptStats(true);
          console.log('‚úÖ TypeScript –ø–∞—Ä—Å–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ');
          return result;
        }
      } catch (error: any) {
        errors.push(`TypeScript: ${error.message}`);
        this.updateTypeScriptStats(false);
        console.warn('‚ö†Ô∏è TypeScript –ø–∞—Ä—Å–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', error.message);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –ø–æ–º–µ—á–∞–µ–º –ø–∞—Ä—Å–µ—Ä –∫–∞–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π
        if (this.isCriticalError(error)) {
          this.status.typescript.available = false;
          this.status.typescript.error = error.message;
        }
      }
    }

    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: Python –ø–∞—Ä—Å–µ—Ä
    if (this.status.python.available && this.status.python.initialized) {
      try {
        console.log('üêç –ü–æ–ø—ã—Ç–∫–∞ 2: Python –ø–∞—Ä—Å–µ—Ä...');
        const result = await pythonWBParser.getProductData(url);
        
        if (this.isValidProductData(result)) {
          console.log('‚úÖ Python –ø–∞—Ä—Å–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ');
          return result;
        }
      } catch (error: any) {
        errors.push(`Python: ${error.message}`);
        console.warn('‚ö†Ô∏è Python –ø–∞—Ä—Å–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', error.message);
        
        // –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π
        if (this.isCriticalError(error)) {
          this.status.python.available = false;
          this.status.python.error = error.message;
        }
      }
    }

    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è + fallback –¥–∞–Ω–Ω—ã–µ
    console.log('üîç –ü–æ–ø—ã—Ç–∫–∞ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...');
    try {
      const exists = await this.checkProductExistence(nmId);
      
      if (exists) {
        console.log('‚úÖ –¢–æ–≤–∞—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
        return this.createFallbackProduct(nmId, url);
      }
    } catch (error: any) {
      errors.push(`Existence check: ${error.message}`);
      console.warn('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', error.message);
    }

    // –ï—Å–ª–∏ –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏
    const errorMessage = `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ ${nmId}. –û—à–∏–±–∫–∏: ${errors.join('; ')}`;
    throw new Error(errorMessage);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞
   */
  private isValidProductData(data: WBProductData | null): data is WBProductData {
    return !!(
      data && 
      data.id && 
      data.name && 
      data.name.length > 3 && 
      data.name !== '–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è' &&
      data.name !== `–¢–æ–≤–∞—Ä ${data.id}`
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏
   */
  private isCriticalError(error: any): boolean {
    const criticalErrors = [
      'module not found',
      'python not found',
      'api endpoint not available',
      'authorization failed',
      'network unreachable'
    ];

    const errorMessage = error.message?.toLowerCase() || '';
    return criticalErrors.some(critical => errorMessage.includes(critical));
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ TypeScript –ø–∞—Ä—Å–µ—Ä–∞
   */
  private updateTypeScriptStats(success: boolean): void {
    const currentRate = this.status.typescript.successRate;
    // –ü—Ä–æ—Å—Ç–æ–µ —Å–∫–æ–ª—å–∑—è—â–µ–µ —Å—Ä–µ–¥–Ω–µ–µ —Å –≤–µ—Å–æ–º 0.1 –¥–ª—è –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    this.status.typescript.successRate = currentRate * 0.9 + (success ? 100 : 0) * 0.1;
    
    // –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç –Ω–∏–∂–µ 20%, –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã–π
    if (this.status.typescript.successRate < 20) {
      console.warn('‚ö†Ô∏è –ù–∏–∑–∫–∞—è —É—Å–ø–µ—à–Ω–æ—Å—Ç—å TypeScript –ø–∞—Ä—Å–µ—Ä–∞');
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤
   */
  private async checkProductExistence(nmId: string): Promise<boolean> {
    const checks = [
      () => this.checkViaImage(nmId),
      () => this.checkViaTypeScript(nmId),
      () => this.checkViaPython(nmId)
    ];

    for (const check of checks) {
      try {
        const exists = await check();
        if (exists) return true;
      } catch (error) {
        continue; // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Å–ª–µ–¥—É—é—â–∏–º –º–µ—Ç–æ–¥–æ–º
      }
    }

    return false;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
   */
  private async checkViaImage(nmId: string): Promise<boolean> {
    if (nmId.length < 6) return false;

    const vol = nmId.slice(0, -5);
    const part = nmId.slice(-5, -3);
    const imageUrl = `https://images.wbstatic.net/vol${vol}/part${part}/${nmId}/images/c246x328/1.webp`;
    
    try {
      const response = await fetch(imageUrl, { 
        method: 'HEAD',
        signal: AbortSignal.timeout(5000)
      });
      return response.ok;
    } catch {
      return false;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ TypeScript –ø–∞—Ä—Å–µ—Ä
   */
  private async checkViaTypeScript(nmId: string): Promise<boolean> {
    if (!this.status.typescript.available) return false;
    
    try {
      return await wbSimpleParser.checkProductExists(nmId);
    } catch {
      return false;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Python –ø–∞—Ä—Å–µ—Ä
   */
  private async checkViaPython(nmId: string): Promise<boolean> {
    if (!this.status.python.available || !this.status.python.initialized) return false;
    
    try {
      return await pythonWBParser.checkProductExists(nmId);
    } catch {
      return false;
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ fallback –ø—Ä–æ–¥—É–∫—Ç–∞
   */
  private createFallbackProduct(nmId: string, originalUrl: string): WBProductData {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ URL –∏–ª–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º –≤ ID
    let category = '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞';
    let categoryId = 14727;

    // –ê–Ω–∞–ª–∏–∑ URL –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const urlLower = originalUrl.toLowerCase();
    if (urlLower.includes('electronics') || urlLower.includes('gadget')) {
      category = '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞';
      categoryId = 1229;
    }

    return {
      id: nmId,
      name: `–¢–æ–≤–∞—Ä ${nmId}`,
      brand: 'NoName',
      price: 0,
      rating: 0,
      reviewsCount: 0,
      description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.',
      characteristics: [
        { name: '–ê—Ä—Ç–∏–∫—É–ª', value: nmId },
        { name: '–°—Ç–∞—Ç—É—Å', value: '–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è' },
        { name: '–ò—Å—Ç–æ—á–Ω–∏–∫', value: 'Fallback –¥–∞–Ω–Ω—ã–µ' }
      ],
      images: this.generateImageUrls(nmId),
      category,
      categoryId,
      availability: true,
      vendorCode: nmId,
      supplierId: undefined,
      tnved: '8544429009'
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   */
  private generateImageUrls(nmId: string): string[] {
    if (nmId.length < 6) return [];
    
    const vol = nmId.slice(0, -5);
    const part = nmId.slice(-5, -3);
    
    const images: string[] = [];
    const hosts = ['images.wbstatic.net', 'basket-01.wbbasket.ru', 'basket-02.wbbasket.ru'];
    
    for (let i = 1; i <= 5; i++) {
      const host = hosts[i % hosts.length];
      images.push(`https://${host}/vol${vol}/part${part}/${nmId}/images/c516x688/${i}.webp`);
    }
    
    return images;
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TypeScript –ø–∞—Ä—Å–µ—Ä–∞
   */
  private async testTypeScriptParser(): Promise<void> {
    const testNmId = '221501024'; // –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä
    const exists = await wbSimpleParser.checkProductExists(testNmId);
    
    if (!exists) {
      throw new Error('–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞');
    }
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL
   */
  extractProductId(url: string): string | null {
    return wbSimpleParser.extractProductId(url);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π WB
   */
  async getWBCategories(apiToken: string): Promise<any[]> {
    await this.ensureInitialized();
    
    if (this.status.typescript.available) {
      try {
        return await wbSimpleParser.getWBCategories(apiToken);
      } catch (error) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–µ—Ä–µ–∑ TypeScript –ø–∞—Ä—Å–µ—Ä:', error);
      }
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–∫ fallback
    return this.getStaticCategories();
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  async getCategoryCharacteristics(categoryId: number, apiToken: string): Promise<any[]> {
    await this.ensureInitialized();
    
    if (this.status.typescript.available) {
      try {
        return await wbSimpleParser.getCategoryCharacteristics(categoryId, apiToken);
      } catch (error) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —á–µ—Ä–µ–∑ TypeScript –ø–∞—Ä—Å–µ—Ä:', error);
      }
    }
    
    return [];
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
   */
  async createProductCard(cardData: any, apiToken: string): Promise<any> {
    await this.ensureInitialized();
    
    if (this.status.typescript.available) {
      return await wbSimpleParser.createProductCard(cardData, apiToken);
    }
    
    throw new Error('TypeScript –ø–∞—Ä—Å–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏');
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤
   */
  getParserStatus(): {
    typescript: boolean;
    python: boolean;
    details: ParserStatus;
    recommendations: string[];
  } {
    const recommendations: string[] = [];
    
    if (!this.status.typescript.available) {
      recommendations.push('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è TypeScript –ø–∞—Ä—Å–µ—Ä–∞');
    }
    
    if (this.status.typescript.successRate < 50) {
      recommendations.push('–ù–∏–∑–∫–∞—è —É—Å–ø–µ—à–Ω–æ—Å—Ç—å TypeScript –ø–∞—Ä—Å–µ—Ä–∞ - –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å API');
    }
    
    if (!this.status.python.available) {
      recommendations.push('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7+ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏');
    }
    
    if (!this.status.python.initialized && this.status.python.available) {
      recommendations.push('–ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Python –ø–∞—Ä—Å–µ—Ä');
    }

    return {
      typescript: this.status.typescript.available,
      python: this.status.python.available,
      details: this.status,
      recommendations
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
   */
  async getDetailedStats(): Promise<{
    typescript: any;
    python: { available: boolean; initialized: boolean; error?: string };
    hybrid: {
      totalRequests: number;
      successfulRequests: number;
      failureRate: number;
      lastUpdate: Date;
    };
  }> {
    await this.ensureInitialized();
    
    const tsStats = this.status.typescript.available ? wbSimpleParser.getParserStats() : null;
    
    return {
      typescript: tsStats,
      python: {
        available: this.status.python.available,
        initialized: this.status.python.initialized,
        error: this.status.python.error
      },
      hybrid: {
        totalRequests: 0, // TODO: –î–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏
        successfulRequests: 0,
        failureRate: 0,
        lastUpdate: new Date()
      }
    };
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤
   */
async testParsers(): Promise<{
  typescript: { success: boolean; error?: string; responseTime?: number };
  python: { success: boolean; error?: string; responseTime?: number };
  overall: { success: boolean; workingParsers: number };
}> {
    await this.ensureInitialized();
    
    const results = {
      typescript: { success: false },
      python: { success: false },
      overall: { success: false, workingParsers: 0 }
    };

    // –¢–µ—Å—Ç TypeScript –ø–∞—Ä—Å–µ—Ä–∞
    if (this.status.typescript.available) {
      try {
        const startTime = Date.now();
        const testUrl = 'https://www.wildberries.ru/catalog/221501024/detail.aspx';
        const result = await wbSimpleParser.getProductData(testUrl);
        
results.typescript = {
  success: this.isValidProductData(result),
  responseTime: Date.now() - startTime
} as { success: boolean; error?: string; responseTime?: number };
        
        if (results.typescript.success) {
          results.overall.workingParsers++;
        }
      } catch (error: any) {
results.typescript = {
  success: false,
  error: error.message
} as { success: boolean; error?: string; responseTime?: number };
      }
    }

    // –¢–µ—Å—Ç Python –ø–∞—Ä—Å–µ—Ä–∞
    if (this.status.python.available && this.status.python.initialized) {
      try {
        const startTime = Date.now();
        const result = await pythonWBParser.test();
        
       results.python = {
  success: result as unknown as boolean,
  responseTime: Date.now() - startTime
} as { success: boolean; error?: string; responseTime?: number };
        
        if (results.python.success) {
          results.overall.workingParsers++;
        }
      } catch (error: any) {
     results.python = {
  success: false,
  error: error.message
} as { success: boolean; error?: string; responseTime?: number };
      }
    }

    results.overall.success = results.overall.workingParsers > 0;
    
    return results;
  }

  /**
   * –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Python –ø–∞—Ä—Å–µ—Ä–∞
   */
  async reinitializePython(): Promise<boolean> {
    console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Python –ø–∞—Ä—Å–µ—Ä–∞...');
    
    try {
      this.status.python.initialized = await pythonWBParser.initialize();
      this.status.python.available = this.status.python.initialized;
      this.status.python.error = undefined;
      this.status.python.lastChecked = new Date();
      
      if (this.status.python.initialized) {
        console.log('‚úÖ Python –ø–∞—Ä—Å–µ—Ä –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      } else {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Python –ø–∞—Ä—Å–µ—Ä');
      }
      
      return this.status.python.initialized;
    } catch (error: any) {
      this.status.python.available = false;
      this.status.python.initialized = false;
      this.status.python.error = error.message;
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Python –ø–∞—Ä—Å–µ—Ä–∞:', error);
      return false;
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ TypeScript –ø–∞—Ä—Å–µ—Ä–∞
   */
  async refreshTypeScriptStatus(): Promise<boolean> {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ TypeScript –ø–∞—Ä—Å–µ—Ä–∞...');
    
    try {
      await this.testTypeScriptParser();
      this.status.typescript.available = true;
      this.status.typescript.error = undefined;
      this.status.typescript.lastChecked = new Date();
      console.log('‚úÖ TypeScript –ø–∞—Ä—Å–µ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      return true;
    } catch (error: any) {
      this.status.typescript.available = false;
      this.status.typescript.error = error.message;
      this.status.typescript.lastChecked = new Date();
      console.warn('‚ö†Ô∏è TypeScript –ø–∞—Ä—Å–µ—Ä –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
      return false;
    }
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–æ–≤
   */
async autoRecover(): Promise<{
  typescript: { recovered: boolean; error?: string };
  python: { recovered: boolean; error?: string };
}> {
    console.log('üîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–æ–≤...');
    
    const results = {
      typescript: { recovered: false },
      python: { recovered: false }
    };

    // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è TypeScript –ø–∞—Ä—Å–µ—Ä–∞
    if (!this.status.typescript.available) {
      try {
        results.typescript.recovered = await this.refreshTypeScriptStatus();
       } catch (error: any) {
  (results.typescript as any).error = error.message;
      }
    } else {
      results.typescript.recovered = true;
    }

    // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Python –ø–∞—Ä—Å–µ—Ä–∞
    if (!this.status.python.available) {
      try {
        results.python.recovered = await this.reinitializePython();
} catch (error: any) {
  (results.python as any).error = error.message;
}
    } else {
      results.python.recovered = true;
    }

    const recoveredCount = Object.values(results).filter(r => r.recovered).length;
    console.log(`üéØ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${recoveredCount}/2 –ø–∞—Ä—Å–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç`);

    return results;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
   */
  private getStaticCategories(): any[] {
    return [
      { objectID: 1229, objectName: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', parentID: 0, parentName: '–ö–æ—Ä–µ–Ω—å', isLeaf: true },
      { objectID: 5392, objectName: '–ö–∞–±–µ–ª–∏ –∏ –∞–¥–∞–ø—Ç–µ—Ä—ã', parentID: 1229, parentName: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', isLeaf: true },
      { objectID: 9836, objectName: '–ó–∞—Ä—è–¥–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', parentID: 1229, parentName: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', isLeaf: true },
      { objectID: 340, objectName: '–ù–∞—É—à–Ω–∏–∫–∏', parentID: 1229, parentName: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', isLeaf: true },
      { objectID: 14727, objectName: '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞', parentID: 0, parentName: '–ö–æ—Ä–µ–Ω—å', isLeaf: true },
      { objectID: 8126, objectName: '–ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞', parentID: 0, parentName: '–ö–æ—Ä–µ–Ω—å', isLeaf: true },
      { objectID: 1347, objectName: '–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã', parentID: 0, parentName: '–ö–æ—Ä–µ–Ω—å', isLeaf: true },
      { objectID: 1408, objectName: '–°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö', parentID: 0, parentName: '–ö–æ—Ä–µ–Ω—å', isLeaf: true }
    ];
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤
   */
  async forceStop(): Promise<void> {
    console.log('üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤...');
    
    this.status.typescript.available = false;
    this.status.python.available = false;
    this.status.python.initialized = false;
    
    await this.cleanup();
    console.log('üõë –í—Å–µ –ø–∞—Ä—Å–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  getOptimizationRecommendations(): string[] {
    const recommendations: string[] = [];
    
    if (this.status.typescript.successRate < 80) {
      recommendations.push('–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è TypeScript –ø–∞—Ä—Å–µ—Ä–∞');
      recommendations.push('–£–≤–µ–ª–∏—á—å—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏');
    }
    
    if (!this.status.python.available) {
      recommendations.push('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –ø–∞—Ä—Å–µ—Ä –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏');
      recommendations.push('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Python 3.7+ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ');
    }
    
    if (this.status.typescript.available && this.status.python.available) {
      recommendations.push('–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ');
      recommendations.push('–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞—Ä—Å–µ—Ä–æ–≤');
    }
    
    recommendations.push('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏');
    
    return recommendations;
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
   */
  async cleanup(): Promise<void> {
    try {
      if (this.status.typescript.available) {
        await wbSimpleParser.cleanup();
      }
      
      if (this.status.python.available) {
        await pythonWBParser.cleanup();
      }
      
      // –°–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞
      this.status.typescript.lastChecked = new Date();
      this.status.python.lastChecked = new Date();
      
      console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ä–µ—Å—É—Ä—Å–æ–≤:', error);
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
export const hybridWBParser = new HybridWBParser();
export default HybridWBParser;